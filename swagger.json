{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "description": "Social Media Backend REST-API that empowers users to post, comment, like, send friend Request and reset their passwords using OTP for enhanced security",
        "title": "Social Media API"
    },
    "servers": [
        {
            "url": "https://frail-life-jacket-frog.cyclic.app/api"
        }
    ],
    "components": {
        "securitySchemes": {
            "JWT": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey"
            }
        }
    },
    "paths": {
        "/user/register": {
            "post": {
                "tags": ["Doctors"],
                "summary": "Register user",
                "description": "Allows a users to register with username and password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name":{
                                        "type":"string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "ENUM"
                                    }
                                },
                                "required": ["username", "password","gender"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": ["Users"],
                "summary": "User login",
                "description": "Returns JWT token for authentication",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JWT token generated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/user/logoutalldevices": {
            "post": {
                "tags": ["Users"],
                "summary": "User logoutalldevices",
                "description": "Removes JWT token for authentication",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthorized Login to continue"
                    }
                }
            }
        },
        "/user/resetPass": {
            "post": {
                "tags": ["Users"],
                "summary": "User Reset pass",
                "description": "Rest password using OTP to email id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                },
                                "required": [""]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully to registered email if valid"
                    },
                    "401": {
                        "description": "Unauthorized Login to continue"
                    }
                }
            }
        },
        "/user/otp": {
            "post": {
                "tags": ["Reset OTP"],
                "summary": "otp send",
                "description": "Check email",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    
                                },
                                "required": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password Reset successful"
                    }
                }
            }
        },
        "/patients/{id}/create_report": {
            "post": {
                "tags": ["Reports"],
                "summary": "Create a patient report",
                "description": "Allows a doctor to create a report for a patient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Patient ID"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "createdByDoctor": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": ["Negative", "Travelled-Quarantine", "Symptoms-Quarantine", "Positive-Admit"]
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "required": ["createdByDoctor", "status", "date"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient report created successfully"
                    }
                }
            }
        },
        "/patients/{id}/all_reports": {
            "get": {
                "tags": ["Reports"],
                "summary": "Get all reports of a patient",
                "description": "Lists all the reports of a patient from oldest to latest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Patient ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/reports/{status}": {
            "get": {
                "tags": ["Reports"],
                "summary": "Get all reports by status",
                "description": "Lists all reports filtered by a specific status",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Report status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    }
}
